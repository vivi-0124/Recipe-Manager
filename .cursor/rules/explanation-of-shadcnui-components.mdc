---
description: 
globs: *.tsx
alwaysApply: false
---
はい、承知いたしました。Markdown形式で出力します。

---

### UIコンポーネントの解説

---

#### 1. Accordion (`/src/components/ui/accordion.tsx`)
コンテンツの表示/非表示を切り替えるための**折りたたみ可能なパネル**です。よくある質問（FAQ）や、詳細情報を隠しておく場合に便利です。`AccordionPrimitive` を使ってアクセシビリティを確保しています。

#### 2. AlertDialog (`/src/components/ui/alert-dialog.tsx`)
ユーザーに重要な情報や確認を求める**モーダルダイアログ**です。操作の確定や取り消しなど、ユーザーの決定が必要な場面で使われます。画面の中央に表示され、背景が暗くなります。

#### 3. Alert (`/src/components/ui/alert.tsx`)
ユーザーに情報を通知するための、視覚的に目立つ**メッセージボックス**です。成功、警告、エラーなど、様々な状況を伝えるのに使われます。`cva` を使用して、`default` や `destructive` といったスタイルを簡単に切り替えられます。

#### 4. AspectRatio (`/src/components/ui/aspect-ratio.tsx`)
画像や動画などの要素の**アスペクト比（縦横比）を維持**しながら表示するためのコンポーネントです。レスポンシブデザインでレイアウトが崩れるのを防ぎます。

#### 5. Avatar (`/src/components/ui/avatar.tsx`)
ユーザーのプロフィール画像やイニシャルを表示するためのコンポーネントです。SNSやプロフィール画面などでよく使われます。画像がない場合に表示される**代替コンテンツ（フォールバック）**もサポートします。

#### 6. Badge (`/src/components/ui/badge.tsx`)
小さなラベルやタグを表示するためのコンポーネントです。ステータス表示、カテゴリ分け、新着マークなどに使われます。`cva` で様々なスタイルを定義できます。

#### 7. Breadcrumb (`/src/components/ui/breadcrumb.tsx`)
ウェブサイトやアプリケーション内での現在のページの**階層パスを示す「パンくずリスト」**です。ユーザーが現在の位置を把握しやすくなります。項目、リンク、区切り文字などで構成されます。

#### 8. Button (`/src/components/ui/button.tsx`)
アプリケーションの基本的なインタラクション要素である**ボタン**です。クリック可能な要素として、様々なアクションをトリガーします。`cva` を使って**スタイル**や**サイズ**を柔軟に設定できます。

#### 9. Calendar (`/src/components/ui/calendar.tsx`)
**日付を選択**するためのカレンダーUIです。日付ピッカーやスケジュール管理などで利用されます。`react-day-picker` をベースにしており、月の移動や日付選択が可能です。

#### 10. Card (`/src/components/ui/card.tsx`)
関連する情報をグループ化して表示するための**コンテナコンポーネント**です。デザインを整理し、情報を視覚的に区切るのに役立ちます。ヘッダー、タイトル、説明、コンテンツ、フッターといった構造を持てます。

#### 11. Carousel (`/src/components/ui/carousel.tsx`)
複数のコンテンツアイテム（画像、テキストなど）を横または縦に**スライド表示**するためのコンポーネントです。商品のギャラリーや特集記事などで使われます。`embla-carousel-react` をベースにしています。

#### 12. Checkbox (`/src/components/ui/checkbox.tsx`)
ユーザーが項目をオン/オフで選択するための**チェックボックス**です。Radix UIの `CheckboxPrimitive` を使用しており、アクセシビリティが高いです。

#### 13. Collapsible (`/src/components/ui/collapsible.tsx`)
クリックするとコンテンツ領域を**展開または折りたたむ**ことができるコンポーネントです。アコーディオンと似ていますが、単一の折りたたみ可能なセクションを想定しています。

#### 14. Command (`/src/components/ui/command.tsx`)
アプリケーション内で検索、フィルタリング、およびコマンド実行を可能にする**強力なパレット/インターフェース**です。VS Codeのようなコマンドパレットを想像すると良いでしょう。`cmdk` ライブラリをベースにしています。

#### 15. ContextMenu (`/src/components/ui/context-menu.tsx`)
通常、要素を右クリックしたときに表示される、**状況に応じたメニュー（コンテキストメニュー）**です。Radix UIの `ContextMenuPrimitive` を使用し、多機能なメニュー構造を作成できます。

#### 16. Dialog (`/src/components/ui/dialog.tsx`)
ユーザーに情報を表示したり、入力を求めたりするための**モーダルダイアログ**です。`AlertDialog` よりも汎用的な用途で使われます。閉じるボタンも含まれます。

#### 17. Drawer (`/src/components/ui/drawer.tsx`)
画面の端（上、下、左、右）からスライドして表示される**パネルコンポーネント**です。サイドメニュー、フィルターオプション、設定画面などで使われます。`vaul` ライブラリをベースにしています。

#### 18. DropdownMenu (`/src/components/ui/dropdown-menu.tsx`)
要素をクリックしたときに、その要素の近くに**ドロップダウン形式で表示されるメニュー**です。設定メニューやアクションメニューなどでよく使われます。

#### 19. Form (`/src/components/ui/form.tsx`)
React Hook Formと連携して、**フォームの入力、検証、状態管理**を容易にするためのコンポーネント群です。入力フィールドの一元管理やエラー表示の自動化をサポートします。

#### 20. HoverCard (`/src/components/ui/hover-card.tsx`)
要素にマウスカーソルを合わせたときに、関連する情報を表示するための**小さなパネル（カード）**です。ツールチップよりも多くの情報を表示したい場合に便利です。

#### 21. InputOTP (`/src/components/ui/input-otp.tsx`)
**ワンタイムパスワード（OTP）**や認証コードなどの、固定長の数字/文字を分割して入力するためのコンポーネントです。各入力スロットが分かれて表示され、入力しやすくなっています。

#### 22. Input (`/src/components/ui/input.tsx`)
ユーザーが一行のテキスト、数値、またはその他のデータを入力するための**基本的な入力フィールド**です。様々な `type`（例: `text`, `email`, `password`）をサポートします。

#### 23. Label (`/src/components/ui/label.tsx`)
フォーム要素に関連付けられた**テキストラベル**です。アクセシビリティを向上させ、ユーザーがどの入力フィールドが何に対応しているかを理解するのに役立ちます。

#### 24. Menubar (`/src/components/ui/menubar.tsx`)
アプリケーションのトップレベルに配置される、ファイル、編集などのメニュー項目を含む**バー**です。デスクトップアプリケーションのような操作感を提供します。

#### 25. NavigationMenu (`/src/components/ui/navigation-menu.tsx`)
複雑なナビゲーション構造を持つウェブサイトやアプリケーションで、ユーザーが異なるセクション間を移動するための**メニュー**です。メガメニューのような表示にも対応できます。

#### 26. Pagination (`/src/components/ui/pagination.tsx`)
長いリストや検索結果などを複数のページに分割し、ユーザーがそれらのページ間を移動するための**ナビゲーションコンポーネント**です。「前へ」「次へ」のボタンや、特定のページ番号へのリンクを含みます。

#### 27. Popover (`/src/components/ui/popover.tsx`)
特定のUI要素に関連する情報やコントロールを、その要素の近くに表示する**小さなオーバーレイ（ポップアップ）**です。トリガー要素をクリックすると表示され、外部をクリックすると閉じます。

#### 28. Progress (`/src/components/ui/progress.tsx`)
タスクの進行状況や完了度合いを視覚的に表示するための**プログレスバー**です。ファイルのアップロード、ロード時間などに使われます。

#### 29. RadioGroup (`/src/components/ui/radio-group.tsx`)
複数の選択肢の中からユーザーが**一つだけ**を選択できるようにするための**ラジオボタンのグループ**です。

#### 30. Resizable (`/src/components/ui/resizable.tsx`)
ユーザーがドラッグしてパネルのサイズを変更できる**レイアウトコンポーネント**です。IDEやダッシュボードのレイアウト調整などで使われます。

#### 31. ScrollArea (`/src/components/ui/scroll-area.tsx`)
**カスタムデザインのスクロールバー**を持つ、スクロール可能な領域を提供するコンポーネントです。より一貫した見た目を実現します。

#### 32. Select (`/src/components/ui/select.tsx`)
**ドロップダウンメニュー形式**で、ユーザーが複数の選択肢の中から一つを選ぶための入力コンポーネントです。HTMLの `<select>` 要素に似ていますが、より柔軟なスタイリングが可能です。

#### 33. Separator (`/src/components/ui/separator.tsx`)
コンテンツを視覚的に区切るための**水平または垂直の区切り線**です。

#### 34. Sheet (`/src/components/ui/sheet.tsx`)
画面の端からスライドして表示される**オーバーレイパネル**です。主にモバイルでのメニューや詳細表示に使われます。表示される端（`top`, `right`, `bottom`, `left`）を指定できます。

#### 35. Skeleton (`/src/components/ui/skeleton.tsx`)
コンテンツが読み込まれるまでの間、プレースホルダーとして表示される**アニメーション付きの要素**です。ユーザーエクスペリエンスを向上させ、読み込み中であることを視覚的に伝えます。

#### 36. Slider (`/src/components/ui/slider.tsx`)
ユーザーが特定の範囲内で値を選択または調整するための**スライダー**です。音量調整、価格範囲の選択などで利用されます。

#### 37. Sonner (`/src/components/ui/sonner.tsx`)
アプリケーションからの**通知（トーストメッセージ）**を表示するためのコンポーネントです。一時的に表示され、自動的に消えるのが一般的です。

#### 38. Switch (`/src/components/ui/switch.tsx`)
設定の**オン/オフを切り替える**ためのトグルスイッチです。

#### 39. Table (`/src/components/ui/table.tsx`)
データを**表形式で表示**するためのコンポーネントです。ヘッダー、ボディ、フッター、行、セルなど、テーブルの標準的な構造を構築できます。

#### 40. Tabs (`/src/components/ui/tabs.tsx`)
複数のコンテンツパネルを**タブ形式で切り替えて表示**するためのコンポーネントです。設定画面やカテゴリ表示などで使われます。

#### 41. Textarea (`/src/components/ui/textarea.tsx`)
ユーザーが**複数行のテキストを入力**するための入力フィールドです。コメント入力欄やメッセージ送信欄などで使われます。入力内容に応じて高さが自動調整されます。

#### 42. ToggleGroup (`/src/components/ui/toggle-group.tsx`)
複数のトグルボタンをグループ化し、排他的または複数選択を可能にするコンポーネントです。フォントの太さ（B, I, U）選択など、**関連する選択肢をまとめる**のに便利です。

#### 43. Toggle (`/src/components/ui/toggle.tsx`)
**オン/オフの状態を切り替える**ためのボタンです。テキストだけでなくアイコンも表示できます。

#### 44. Tooltip (`/src/components/ui/tooltip.tsx`)
要素にマウスカーソルを合わせたときに、その要素に関する**短い説明文を表示**する小さなポップアップです。

---

26卒の就職活動、応援しています！これらのUIコンポーネントの知識が、Web開発の面接や実務で役立つことを願っています。

何か特に興味を持ったコンポーネントはありましたか？あるいは、具体的な用途についてもっと知りたいものがあれば、遠慮なく聞いてくださいね。
